@{
    var product = Model.Product;
}

    <div class="card mb-4 box-shadow">
        @if (!string.IsNullOrEmpty(product.Images.FirstOrDefault()?.ImageId))
        {
            <img class="card-img-top" alt="Thumbnail [100%x225]" style="height: 225px; width: 100%; display: block;" src="/images/@product.Images.FirstOrDefault()?.ImageId" data-holder-rendered="true">
        }
        else
        {
            <img class="card-img-top" data-src="holder.js/100px225?theme=thumb&amp;bg=55595c&amp;fg=eceeef&amp;text=Thumbnail" alt="Thumbnail [100%x225]" style="height: 225px; width: 100%; display: block;" src="data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22343%22%20height%3D%22225%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20343%20225%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_1722ebdace2%20text%20%7B%20fill%3A%23eceeef%3Bfont-weight%3Abold%3Bfont-family%3AArial%2C%20Helvetica%2C%20Open%20Sans%2C%20sans-serif%2C%20monospace%3Bfont-size%3A17pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_1722ebdace2%22%3E%3Crect%20width%3D%22343%22%20height%3D%22225%22%20fill%3D%22%2355595c%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22114.203125%22%20y%3D%22120.103125%22%3EThumbnail%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E" data-holder-rendered="true">
        }
        <div class="card-body">
            <h5 class="card-title"><a href="/products/@product.Id">@product.Name</a></h5>
            <p class="card-text">
                @product.Description
                <div class="mt-2">
                    @if (product?.Variants?.Count > 0)
                    {
        <div class="form-group">
            <label>@product.VariantsTitle</label>
            <select class="form-control" value="@Model.SelectedVariantId" @onchange="@((e) => Model.SelectedVariantId = int.Parse(e.Value.ToString()))">
                @foreach (var variant in product.Variants)
                {
    <option value="@variant.Id">@variant.Name (@variant?.Price)</option>}
            </select>
        </div>}
                </div>
            </p>
            <div class="d-flex justify-content-between align-items-center">
                <small class="text-muted" style=" font-size: 16px;">
                    <PriceDisplay Price="@product!.Price"
                                  CompareAtPrice="@product!.CompareAtPrice" />
                </small>
                <div class="btn-group">
                    @*<a href="/products/@product.Id" class="btn btn-sm btn-outline-secondary">View</a>*@
                    <button type="button" class="btn btn-sm btn-outline-secondary" @onclick="OnPurchaseClick" @onclick:preventDefault><i class="fa fa-shopping-basket"></i></button>
                </div>

            </div>
        </div>
    </div>

@code {
    [Parameter]
    public ProductViewModel Model { get; set; } = null!;

    [Parameter]
    public EventCallback OnPurchaseClick { get; set; }
}
