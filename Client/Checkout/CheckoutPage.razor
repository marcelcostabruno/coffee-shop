@page "/checkout"
@inject App1.Client.Cart.ShoppingCartService ShoppingCart
@inject ICheckoutClient CheckoutClient
@inject IMapper Mapper
@inject NavigationManager NavigationManager
@implements IDisposable
    
<Title>Checkout - @Site.Name</Title>

    <div class="container">
        <div class="py-5 text-center">
            <h2>Checkout</h2>
            <p class="lead">Below is an example form built entirely with Bootstrap's form controls. Each required form group has a validation state that can be triggered by attempting to submit the form without completing it.</p>
        </div>

        <div class="row">
            <div class="col-md-4 order-md-2 mb-4">
                <h4 class="d-flex justify-content-between align-items-center mb-3">
                    <span class="text-muted">Your basket</span>
                    <span class="badge badge-secondary badge-pill">@(ShoppingCart.Items.Sum(i => i.Quantity))</span>
                </h4>
                <ul class="list-group mb-3">
                    @foreach (var item in ShoppingCart.Items)
                    {
                        if (item.ProductVariant != null)
                        {
                    <li class="list-group-item d-flex justify-content-between lh-condensed">
                        <div>
                            <h6 class="my-0">@item.ProductVariant.Name</h6>
                            <small class="text-muted">@item.ProductVariant.Description</small>
                        </div>
                        <span class="text-muted">@item.Quantity x @item.Price</span>
                    </li>
                        }
                        else if (item.Discount != null)
                        {
                            <li class="list-group-item d-flex justify-content-between lh-condensed">
                                <div>
                                    <h6 class="my-0">@item.Discount.Name</h6>
                                    <small class="text-muted">@item.Discount.Description</small>
                                </div>
                                <span class="text-muted">@item.Quantity x @item.Price</span>
                            </li>
                        }
                        else if (item.Product != null)
                        {
                <li class="list-group-item d-flex justify-content-between lh-condensed">
                    <div>
                        <h6 class="my-0">@item.Product.Name</h6>
                        <small class="text-muted">@item.Product.Description</small>
                    </div>
                    <span class="text-muted">@item.Quantity x @item.Price</span>
                </li>
                        }
                    }
                    @*<li class="list-group-item d-flex justify-content-between bg-light">
                        <div class="text-success">
                            <h6 class="my-0">Promo code</h6>
                            <small>EXAMPLECODE</small>
                        </div>
                        <span class="text-success">-$5</span>
                    </li>*@
                    <li class="list-group-item d-flex justify-content-between">
                        <span>Total (SEK)</span>
                        <strong>@(ShoppingCart.Items.Sum(i => i.Price * i.Quantity))</strong>
                    </li>
                </ul>

                    @*<EditForm class="card p-2" Model="null">
                        <div class="input-group">
                            <input type="text" class="form-control" placeholder="Promo code">
                            <div class="input-group-append">
                                <button type="submit" class="btn btn-secondary">Redeem</button>
                            </div>
                        </div>
                    </EditForm>*@
            </div>
            <div class="col-md-8 order-md-1">
                <h4 class="mb-3">Billing address</h4>
                <EditForm Model="@formModel" OnValidSubmit="CheckOut">
                    <ObjectGraphDataAnnotationsValidator />

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="firstName">First name</label>
                            <InputText class="form-control" @bind-Value="formModel.FirstName"></InputText>
                            <ValidationMessage For="() => formModel.FirstName"></ValidationMessage>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="lastName">Last name</label>
                            <InputText class="form-control" @bind-Value="formModel.LastName"></InputText>
                            <ValidationMessage For="() => formModel.LastName"></ValidationMessage>
                        </div>
                    </div>

                    @*<div class="mb-3">
            <label for="username">Username</label>
            <div class="input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text">@@</span>
                </div>
                <input type="text" class="form-control" id="username" placeholder="Username" required>
                <div class="invalid-feedback" style="width: 100%;">
                    Your username is required.
                </div>
            </div>
        </div>*@

                    <div class="mb-3">
                        <label for="ssn">Social Security Number (SSN)</label>
                        <InputText class="form-control" @bind-Value="formModel.SSN"></InputText>
                        <ValidationMessage For="() => formModel.SSN"></ValidationMessage>
                    </div>

                    <div class="mb-3">
                        <label for="email">Email</label>
                        <InputText type="email" class="form-control" @bind-Value="formModel.EmailAddress"></InputText>
                        <ValidationMessage For="() => formModel.EmailAddress"></ValidationMessage>
                    </div>

                    <div class="mb-3">
                        <label for="email">Phone</label>
                        <InputText type="phone" class="form-control" @bind-Value="formModel.PhoneNumber"></InputText>
                        <ValidationMessage For="() => formModel.PhoneNumber"></ValidationMessage>
                    </div>

                    <div class="mb-3">
                        <label for="address">Address</label>
                        <InputText class="form-control" @bind-Value="formModel.BillingAddress.StreetAddress"></InputText>
                        <ValidationMessage For="() => formModel.BillingAddress.StreetAddress"></ValidationMessage>
                    </div>

                    <div class="mb-3">
                        <label for="address2">Street Number</label>
                        <InputText class="form-control" @bind-Value="formModel.BillingAddress.StreetNumber"></InputText>
                        <ValidationMessage For="() => formModel.BillingAddress.StreetNumber"></ValidationMessage>
                    </div>

                    <div class="mb-3">
                        <label for="address2">Address 2 <span class="text-muted">(Optional)</span></label>
                        <InputText class="form-control" @bind-Value="formModel.BillingAddress.ApartmentNumber"></InputText>
                        <ValidationMessage For="() => formModel.BillingAddress.ApartmentNumber"></ValidationMessage>
                    </div>

                    <div class="mb-3">
                        <label for="address2">City</label>
                        <InputText class="form-control" @bind-Value="formModel.BillingAddress.City"></InputText>
                        <ValidationMessage For="() => formModel.BillingAddress.City"></ValidationMessage>
                    </div>

                    <div class="row">
                        <div class="col-md-5 mb-3">
                            <label for="country">Country</label>
                            <InputSelect class="form-select d-block w-100" @bind-Value="formModel.BillingAddress.Country">
                                <option value="">Choose...</option>
                                <option>United States</option>
                            </InputSelect>
                            <div class="invalid-feedback">
                                Please select a valid country.
                            </div>
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="state">State</label>
                            <InputSelect class="form-select d-block w-100" @bind-Value="formModel.BillingAddress.Country">
                                <option value="">Choose...</option>
                                <option>California</option>
                            </InputSelect>
                            <div class="invalid-feedback">
                                Please provide a valid state.
                            </div>
                        </div>
                        <div class="col-md-3 mb-3">
                            <label for="zip">Zip</label>
                            <InputText class="form-control" @bind-Value="formModel.BillingAddress.ZipCode"></InputText>
                            <ValidationMessage For="() => formModel.BillingAddress.ZipCode"></ValidationMessage>
                        </div>
                    </div>
                    <hr class="mb-4">
                    <div class="custom-control custom-checkbox">
                        <input type="checkbox" class="custom-control-input" id="same-address">
                        <label class="custom-control-label" for="same-address">Shipping address is the same as my billing address</label>
                    </div>
                    <div class="custom-control custom-checkbox">
                        <input type="checkbox" class="custom-control-input" id="save-info">
                        <label class="custom-control-label" for="save-info">Save this information for next time</label>
                    </div>
                    <hr class="mb-4">

                    @*<h4 class="mb-3">Payment</h4>

        <div class="d-block my-3">
            <div class="custom-control custom-radio">
                <input id="credit" name="paymentMethod" type="radio" class="custom-control-input" checked required>
                <label class="custom-control-label" for="credit">Credit card</label>
            </div>
            <div class="custom-control custom-radio">
                <input id="debit" name="paymentMethod" type="radio" class="custom-control-input" required>
                <label class="custom-control-label" for="debit">Debit card</label>
            </div>
            <div class="custom-control custom-radio">
                <input id="paypal" name="paymentMethod" type="radio" class="custom-control-input" required>
                <label class="custom-control-label" for="paypal">Paypal</label>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6 mb-3">
                <label for="cc-name">Name on card</label>
                <input type="text" class="form-control" id="cc-name" placeholder="" required>
                <small class="text-muted">Full name as displayed on card</small>
                <div class="invalid-feedback">
                    Name on card is required
                </div>
            </div>
            <div class="col-md-6 mb-3">
                <label for="cc-number">Credit card number</label>
                <input type="text" class="form-control" id="cc-number" placeholder="" required>
                <div class="invalid-feedback">
                    Credit card number is required
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-3 mb-3">
                <label for="cc-expiration">Expiration</label>
                <input type="text" class="form-control" id="cc-expiration" placeholder="" required>
                <div class="invalid-feedback">
                    Expiration date required
                </div>
            </div>
            <div class="col-md-3 mb-3">
                <label for="cc-expiration">CVV</label>
                <input type="text" class="form-control" id="cc-cvv" placeholder="" required>
                <div class="invalid-feedback">
                    Security code required
                </div>
            </div>
        </div>
        <hr class="mb-4">*@
                    <button class="btn btn-primary btn-lg btn-block" type="submit">Continue to checkout</button>
                </EditForm>
            </div>
        </div>
    </div>

@code {
    CheckoutFormModel formModel = new CheckoutFormModel();

    protected override async Task OnInitializedAsync()
    {
        if(!ShoppingCart.Items.Any())
        {
            NavigationManager.NavigateTo("/");
        }

        ShoppingCart.CartUpdated += OnCartUpdated;
    }

    private async Task CheckOut()
    {
        var checkout = Mapper.Map<CheckOut>(formModel);
        checkout.ShippingAddress = checkout.BillingAddress;
        await CheckoutClient.CheckoutAsync(checkout);

        await ShoppingCart.ClearAsync();

        NavigationManager.NavigateTo("/");
    }

    private void OnCartUpdated(object sender, EventArgs eventArgs)
    {
        if (!ShoppingCart.Items.Any())
        {
            NavigationManager.NavigateTo("/");
        }

        StateHasChanged();
    }

    public void Dispose()
    {
        ShoppingCart.CartUpdated -= OnCartUpdated;
    }
}
